name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  clear-for-deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        run:  pip install poetry==1.8.5

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: make install

      - name: Run pre-deploy
        run: make pre-deploy

      - name: Check if version exists on PyPI
        id: check_version
        run: |
          PACKAGE_NAME=$(poetry version | awk '{print $1}')
          PACKAGE_VERSION=$(poetry version | awk '{print $2}')
          if curl -s https://pypi.org/pypi/$PACKAGE_NAME/$PACKAGE_VERSION/json | grep -q 'Not Found'; then
            echo "Version does not exist on PyPI. Proceeding with publish."
            echo "::set-output name=exists::false"
          else
            echo "Version already exists on PyPI. Exiting."
            echo "::set-output name=exists::true"
          fi

      - name: Deploy application
        if: steps.check_version.outputs.exists == 'false'
        run: |
          poetry build
          poetry publish --username __token__ --password ${{ secrets.PYPI_TOKEN }}
